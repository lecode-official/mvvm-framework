<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|AnyCPU">
      <Configuration>Debug</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|AnyCPU">
      <Configuration>Release</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>720ff6cc-d21e-4a10-a162-3b476c7e80bd</ProjectGuid>
  </PropertyGroup>
  <PropertyGroup>
    <NuProjPath Condition=" '$(NuProjPath)' == '' ">$(MSBuildExtensionsPath)\NuProj\</NuProjPath>
  </PropertyGroup>
  <Import Project="$(NuProjPath)\NuProj.props" Condition="Exists('$(NuProjPath)\NuProj.props')" />
  <PropertyGroup Label="Configuration">
    <Id>Windows.Mvvm</Id>
    <Version>0.2.9</Version>
    <Title>MVVM Framework (UWP)</Title>
    <Authors>David Neumann, Lukas Rögner</Authors>
    <Owners>David Neumann, Lukas Rögner</Owners>
    <Summary>The MVVM Framework is a compact and simple, yet powerful implementation of the MVVM pattern for UWP.</Summary>
    <Description>The MVVM Framework is a compact and simple, yet powerful implementation of the MVVM pattern for UWP. It provides a strong model for managing the application lifecycle and the navigation. The MVVM framework decouples operation system functionality from the application logic by providing a powerful service system, which abstracts away any platform specific code from the application logic. Everything in the framework was build with the task awaitable pattern in mind, from application lifecycle management to navigation. The framework plays nice with all kinds of frameworks, for example the dependency injection mechanism build into the framework does not care what </Description>
    <ReleaseNotes>MVVM, UWP, WinRT, Windows 10, Windows 10 Mobile, Framework, ReactiveUI</ReleaseNotes>
    <ProjectUrl>https://github.com/lecode-official/mvvm-framework</ProjectUrl>
    <LicenseUrl>https://raw.githubusercontent.com/lecode-official/mvvm-framework/master/LICENSE</LicenseUrl>
    <Copyright>Copyright 2016 © David Neumann &amp; Lukas Rögner</Copyright>
    <Tags>Initial implementation of the MVVM Framework for UWP. The UWP version of the framework looks and feels very similar to the WPF version, but it acknowledges the differences between the platforms by providing APIs that are very similar but tailor-made for UWP.</Tags>
    <IconUrl>https://raw.githubusercontent.com/lecode-official/mvvm-framework/master/Documentation/Images/Logo128x128.png</IconUrl>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="License.txt" />
    <Content Include="tools\init.ps1" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\UWP\Windows.Mvvm.Application\Windows.Mvvm.Application.csproj" />
    <ProjectReference Include="..\..\UWP\Windows.Mvvm.Configuration\Windows.Mvvm.Configuration.csproj" />
    <ProjectReference Include="..\..\UWP\Windows.Mvvm.Reactive\Windows.Mvvm.Reactive.csproj" />
    <ProjectReference Include="..\..\UWP\Windows.Mvvm.Services.Application\Windows.Mvvm.Services.Application.csproj" />
    <ProjectReference Include="..\..\UWP\Windows.Mvvm.Services.Dialog\Windows.Mvvm.Services.Dialog.csproj" />
    <ProjectReference Include="..\..\UWP\Windows.Mvvm.Services.Navigation\Windows.Mvvm.Services.Navigation.csproj" />
    <ProjectReference Include="..\..\UWP\Windows.Mvvm.UI\Windows.Mvvm.UI.csproj" />
  </ItemGroup>
  <Import Project="$(NuProjPath)\NuProj.targets" />
</Project>